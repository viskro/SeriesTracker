
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GenresScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SeriesGenresScalarFieldEnum = {
  id_show: 'id_show',
  id_genre: 'id_genre'
};

exports.Prisma.ShowCommentsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  postedAt: 'postedAt',
  id_user: 'id_user',
  id_show: 'id_show'
};

exports.Prisma.EpisodesCommentsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  postedAt: 'postedAt',
  id_user: 'id_user',
  id_episode: 'id_episode'
};

exports.Prisma.EpisodesScalarFieldEnum = {
  episode_id: 'episode_id',
  season_id: 'season_id',
  name: 'name',
  season_number: 'season_number',
  episode_number: 'episode_number',
  airdate: 'airdate',
  summary: 'summary',
  url: 'url',
  image: 'image'
};

exports.Prisma.CastScalarFieldEnum = {
  person_id: 'person_id',
  name: 'name',
  image: 'image'
};

exports.Prisma.SeasonsScalarFieldEnum = {
  season_id: 'season_id',
  show_id: 'show_id',
  summary: 'summary',
  image: 'image'
};

exports.Prisma.ShowCastScalarFieldEnum = {
  show_id: 'show_id',
  person_id: 'person_id',
  character_name: 'character_name'
};

exports.Prisma.PlatformsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  country_code: 'country_code'
};

exports.Prisma.SeriesPlatformsScalarFieldEnum = {
  id_show: 'id_show',
  id_platform: 'id_platform'
};

exports.Prisma.ShowsScalarFieldEnum = {
  show_id: 'show_id',
  title: 'title',
  summary: 'summary',
  image: 'image'
};

exports.Prisma.UserShowsScalarFieldEnum = {
  id_user: 'id_user',
  id_show: 'id_show',
  is_favorite: 'is_favorite',
  is_archived: 'is_archived',
  status: 'status',
  added_at: 'added_at',
  rating: 'rating'
};

exports.Prisma.UserEpisodesScalarFieldEnum = {
  id_user: 'id_user',
  id_episode: 'id_episode',
  watched_at: 'watched_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  image: 'image'
};

exports.Prisma.SessionOrderByRelevanceFieldEnum = {
  id: 'id',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  scope: 'scope',
  password: 'password'
};

exports.Prisma.VerificationOrderByRelevanceFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value'
};

exports.Prisma.GenresOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.ShowCommentsOrderByRelevanceFieldEnum = {
  content: 'content',
  id_user: 'id_user'
};

exports.Prisma.EpisodesCommentsOrderByRelevanceFieldEnum = {
  content: 'content',
  id_user: 'id_user'
};

exports.Prisma.EpisodesOrderByRelevanceFieldEnum = {
  name: 'name',
  airdate: 'airdate',
  summary: 'summary',
  url: 'url',
  image: 'image'
};

exports.Prisma.CastOrderByRelevanceFieldEnum = {
  name: 'name',
  image: 'image'
};

exports.Prisma.SeasonsOrderByRelevanceFieldEnum = {
  summary: 'summary',
  image: 'image'
};

exports.Prisma.ShowCastOrderByRelevanceFieldEnum = {
  character_name: 'character_name'
};

exports.Prisma.PlatformsOrderByRelevanceFieldEnum = {
  name: 'name',
  type: 'type',
  country_code: 'country_code'
};

exports.Prisma.ShowsOrderByRelevanceFieldEnum = {
  title: 'title',
  summary: 'summary',
  image: 'image'
};

exports.Prisma.UserShowsOrderByRelevanceFieldEnum = {
  id_user: 'id_user'
};

exports.Prisma.UserEpisodesOrderByRelevanceFieldEnum = {
  id_user: 'id_user'
};
exports.users_shows_status = exports.$Enums.users_shows_status = {
  to_watch: 'to_watch',
  ongoing: 'ongoing',
  finished: 'finished'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Genres: 'Genres',
  SeriesGenres: 'SeriesGenres',
  ShowComments: 'ShowComments',
  EpisodesComments: 'EpisodesComments',
  Episodes: 'Episodes',
  Cast: 'Cast',
  Seasons: 'Seasons',
  ShowCast: 'ShowCast',
  Platforms: 'Platforms',
  SeriesPlatforms: 'SeriesPlatforms',
  Shows: 'Shows',
  UserShows: 'UserShows',
  UserEpisodes: 'UserEpisodes'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
